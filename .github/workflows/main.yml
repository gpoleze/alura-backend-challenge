# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test with Gradle
        run: ./gradlew test

  integration_tests:
    runs-on: ubuntu-latest
    needs: unit_test
    services:
      postgres:
        image: postgres
        volumes:
          - "$GITHUB_WORKSPACE/src/test/docker/test-data:/var/lib/postgresql/data"
        env:
          POSTGRES_DB: alurapix-dev
          POSTGRES_USER: local_dev
          POSTGRES_PASSWORD: local_dev
        ports:
          - "5432:5432"
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 16
      uses: actions/setup-java@v2
      with:
        java-version: '16'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test with Gradle
      run: ./gradlew integrationTest
      env:
        DB_USERNAME: local_dev
        DB_PORT: 5432
        DB_HOST: localhost
        DB_SCHEMAa: alurapix-dev
        DB_PASSWORD: local_dev

  build:
    runs-on: ubuntu-latest
    needs: integration_tests
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build --x test
